{"version":3,"sources":["../../source/page-server/locale.js"],"names":["get_preferred_locales","locale_key","ctx","locales","locale_from_query","getLocaleFromQuery","push","locale_from_cookie","getLocaleFromCookie","concat","getLocalesFromHeader","query","accepts","acceptsLanguages","regular_expression","match","length","exec","locale","toUpperCase","cookies","get"],"mappings":";;;;;QAIgBA,qB,GAAAA,qB;AAJhB,IAAMC,aAAa,QAAnB;;AAEA;AACA;AACO,SAASD,qBAAT,CAA+BE,GAA/B,EACP;AACC,KAAIC,UAAU,EAAd;;AAEA,KAAMC,oBAAoBC,mBAAmBH,GAAnB,CAA1B;AACA,KAAIE,iBAAJ,EACA;AACCD,UAAQG,IAAR,CAAaF,iBAAb;AACA;;AAED,KAAMG,qBAAqBC,oBAAoBN,GAApB,CAA3B;AACA,KAAIK,kBAAJ,EACA;AACCJ,UAAQG,IAAR,CAAaC,kBAAb;AACA;;AAEDJ,WAAUA,QAAQM,MAAR,CAAeC,qBAAqBR,GAArB,CAAf,CAAV;;AAEA,QAAOC,OAAP;AACA;;AAED;AACA,SAASE,kBAAT,CAA4BH,GAA5B,EACA;AACC,QAAOA,IAAIS,KAAJ,CAAUV,UAAV,CAAP;AACA;;AAED;AACA,SAASS,oBAAT,CAA8BR,GAA9B,EACA;AACC,KAAMU,UAAUV,IAAIW,gBAAJ,MAA0B,EAA1C;;AAEA;AACA,KAAMC,qBAAqB,yCAA3B;;AAEA,KAAIX,UAAU,EAAd;;AAEA,KAAIY,cAAJ;AACA;AACA;AACA,QAAOZ,QAAQa,MAAR,GAAiB,EAAjB,KAAwBD,QAAQD,mBAAmBG,IAAnB,CAAwBL,OAAxB,CAAhC,CAAP,EACA;AACC,MAAIM,SAASH,MAAM,CAAN,CAAb;;AAEA,MAAIA,MAAMC,MAAN,GAAe,CAAf,IAAoBD,MAAM,CAAN,CAAxB,EACA;AACCG,aAAUH,MAAM,CAAN,EAASI,WAAT,EAAV;AACA;;AAEDhB,UAAQG,IAAR,CAAaY,MAAb;AACA;;AAED,QAAOf,OAAP;AACA;;AAED;AACA,SAASK,mBAAT,CAA6BN,GAA7B,EACA;AACC,QAAOA,IAAIkB,OAAJ,CAAYC,GAAZ,CAAgBpB,UAAhB,CAAP;AACA","file":"locale.js","sourcesContent":["const locale_key = 'locale'\n\n// Based on `koa-locale`\n// https://github.com/koa-modules/locale/blob/master/index.js\nexport function get_preferred_locales(ctx)\n{\n\tlet locales = []\n\n\tconst locale_from_query = getLocaleFromQuery(ctx)\n\tif (locale_from_query)\n\t{\n\t\tlocales.push(locale_from_query)\n\t}\n\n\tconst locale_from_cookie = getLocaleFromCookie(ctx)\n\tif (locale_from_cookie)\n\t{\n\t\tlocales.push(locale_from_cookie)\n\t}\n\n\tlocales = locales.concat(getLocalesFromHeader(ctx))\n\n\treturn locales\n}\n\n// From query, `locale=en`\nfunction getLocaleFromQuery(ctx)\n{\n\treturn ctx.query[locale_key]\n}\n\n// From accept-language, `Accept-Language: zh-CN`\nfunction getLocalesFromHeader(ctx)\n{\n\tconst accepts = ctx.acceptsLanguages() || ''\n\t\n\t// E.g. \"Accept-Language\": \"da, en-gb;q=0.8, en;q=0.7\"\n\tconst regular_expression = /(^|,\\s*)(?:([a-z]{1,8})(-[A-z]{1,8})?)/g\n\n\tlet locales = []\n\n\tlet match\n\t// Terminates at 10 preferred locales max\n\t// (to protect from a possible overflow attack)\n\twhile (locales.length < 10 && (match = regular_expression.exec(accepts)))\n\t{\n\t\tlet locale = match[2]\n\n\t\tif (match.length > 3 && match[3])\n\t\t{\n\t\t\tlocale += match[3].toUpperCase()\n\t\t}\n\n\t\tlocales.push(locale)\n\t}\n\n\treturn locales\n}\n\n// From cookie, `locale=zh-CN`\nfunction getLocaleFromCookie(ctx)\n{\n\treturn ctx.cookies.get(locale_key)\n}"]}