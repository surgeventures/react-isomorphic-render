{"version":3,"sources":["../../../source/redux/client/instant back.js"],"names":["add_instant_back","is_instant_transition","reset_instant_back","next_location","previous_location","instant_back","previous_location_index","indexOf","get_location_key","console","error","slice","push","from_location","to_location","undefined","location","key"],"mappings":";;;;;QAEgBA,gB,GAAAA,gB;QA0BAC,qB,GAAAA,qB;QAQAC,kB,GAAAA,kB;;AApChB;;AAEO,SAASF,gBAAT,CAA0BG,aAA1B,EAAyCC,iBAAzC,EACP;AACC,KAAIC,eAAe,oCAAiB,cAAjB,EAAiC,EAAjC,CAAnB;;AAEA,KAAIA,YAAJ,EACA;AACC,MAAMC,0BAA0BD,aAAaE,OAAb,CAAqBC,iBAAiBJ,iBAAjB,CAArB,CAAhC;;AAEA,MAAIE,0BAA0B,CAA9B,EACA;AACCG,WAAQC,KAAR,CAAc,mHAAd,EAAmIF,iBAAiBJ,iBAAjB,CAAnI,EAAwKC,YAAxK;AACA,UAAOH,oBAAP;AACA;;AAEDG,iBAAeA,aAAaM,KAAb,CAAmB,CAAnB,EAAsBL,0BAA0B,CAAhD,CAAf;AACA,EAXD,MAaA;AACCD,iBAAe,CAACG,iBAAiBJ,iBAAjB,CAAD,CAAf;AACA;;AAEDC,cAAaO,IAAb,CAAkBJ,iBAAiBL,aAAjB,CAAlB;;AAEA,qCAAiB,cAAjB,EAAiC,EAAjC,EAAqCE,YAArC;AACA;;AAEM,SAASJ,qBAAT,CAA+BY,aAA/B,EAA8CC,WAA9C,EACP;AACC,KAAMT,eAAe,oCAAiB,cAAjB,EAAiC,EAAjC,KAAwC,EAA7D;;AAEA,QAAOA,aAAaE,OAAb,CAAqBC,iBAAiBK,aAAjB,CAArB,KAAyD,CAAzD,IACNR,aAAaE,OAAb,CAAqBC,iBAAiBM,WAAjB,CAArB,KAAuD,CADxD;AAEA;;AAEM,SAASZ,kBAAT,GACP;AACC,qCAAiB,cAAjB,EAAiC,EAAjC,EAAqCa,SAArC;AACA;;AAED;AACA,SAASP,gBAAT,CAA0BQ,QAA1B,EACA;AACC,QAAOA,SAASC,GAAT,GAAeD,SAASC,GAAxB,GAA8B,SAArC;AACA","file":"instant back.js","sourcesContent":["import { store_in_history, get_from_history } from './history store'\n\nexport function add_instant_back(next_location, previous_location)\n{\n\tlet instant_back = get_from_history('instant-back', '')\n\n\tif (instant_back)\n\t{\n\t\tconst previous_location_index = instant_back.indexOf(get_location_key(previous_location))\n\n\t\tif (previous_location_index < 0)\n\t\t{\n\t\t\tconsole.error('[react-isomorphic-render] Error: previous location not found in an already existing instant back navigation chain', get_location_key(previous_location), instant_back)\n\t\t\treturn reset_instant_back()\n\t\t}\n\n\t\tinstant_back = instant_back.slice(0, previous_location_index + 1)\n\t}\n\telse\n\t{\n\t\tinstant_back = [get_location_key(previous_location)]\n\t}\n\n\tinstant_back.push(get_location_key(next_location))\n\n\tstore_in_history('instant-back', '', instant_back)\n}\n\nexport function is_instant_transition(from_location, to_location)\n{\n\tconst instant_back = get_from_history('instant-back', '') || []\n\n\treturn instant_back.indexOf(get_location_key(from_location)) >= 0 &&\n\t\tinstant_back.indexOf(get_location_key(to_location)) >= 0\n}\n\nexport function reset_instant_back()\n{\n\tstore_in_history('instant-back', '', undefined)\n}\n\n// The initial `location` (page) has no `key`\nfunction get_location_key(location)\n{\n\treturn location.key ? location.key : 'initial'\n}"]}