{"version":3,"sources":["../../../source/redux/client/websocket.js"],"names":["websocket","host","port","secure","store","token","autoDispatch","_websocket","undefined","shouldReconnect","event","code","jitter","Math","min","pow","attempts","send","message","close","listen","event_name","listener","enhanced_listener","addEventListener","removeEventListener","onOpen","onClose","onError","onMessage","JSON","parse","data","socket","type","dispatch","window","value","amount","random"],"mappings":"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","file":"websocket.js","sourcesContent":["import RobustWebSocket from '../../robust-websocket'\nimport CustomEvent from '../../custom event'\n\n// Sets up WebSocket connection.\n//\n// Legacy `token` option is deprecated and will be removed in any future major release.\n//\nexport default function websocket({ host, port, secure, store, token, autoDispatch })\n{\n\tconst _websocket = new RobustWebSocket(`${secure ? 'wss' : 'ws'}://${host}:${port}`, undefined,\n\t{\n\t\t// If a number returned then it's gonna be a delay\n\t\t// before reconnect is attempted.\n\t\t// If anything else is returned (`null`, `undefined`, `false`)\n\t\t// then it means \"don't try to reconnect\".\n\t\t//\n\t\t// `event` is either a `CloseEvent`\n\t\t// or an online/offline `navigator` event.\n\t\t//\n\t\tshouldReconnect(event, websocket)\n\t\t{\n\t\t\t// https://github.com/appuri/robust-websocket/issues/8\n\t\t\t//\n\t\t\t// 1011 (500) is not retried by the default shouldReconnect.\n\t\t\t// a 500 will usually either be a big in the server\n\t\t\t// that the code is hitting, and retrying won't help,\n\t\t\t// or the server is down and getting slammed,\n\t\t\t// and retrying will just slam it more.\n\t\t\t// Sure the server will probably eventually come back up\n\t\t\t// so retrying it at a longer interval would be fine.\n\t\t\t//\n\t\t\t// 1008 (400) means the request you formed is bad.\n\t\t\t// If you try the exact same request again, you should always get 400.\n\t\t\t// 400 is not a transient error. If it is, the API is using the wrong status code.\n\t\t\t//\n\t\t\tif (event.code === 1008 || event.code === 1011)\n\t\t\t{\n\t\t\t\t// Retry in 30 minutes\n\t\t\t\treturn jitter(30 * 60 * 1000)\n\t\t\t}\n\n\t\t\t// Exponential backoff, but no less that once in a couple of minutes\n\t\t\treturn jitter(Math.min(Math.pow(1.5, websocket.attempts) * 500, 2 * 60 * 1000))\n\t\t}\n\t})\n\n\tconst websocket =\n\t{\n\t\tsend(message)\n\t\t{\n\t\t\t// Legacy `token` option is deprecated and will be removed in any future major release.\n\t\t\tif (token)\n\t\t\t{\n\t\t\t\tmessage =\n\t\t\t\t{\n\t\t\t\t\t...message,\n\t\t\t\t\ttoken\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _websocket.send(JSON.stringify(message))\n\t\t},\n\n\t\tclose()\n\t\t{\n\t\t\treturn _websocket.close()\n\t\t},\n\n\t\tlisten(event_name, listener)\n\t\t{\n\t\t\tconst enhanced_listener = (event) => listener(event, store)\n\n\t\t\t_websocket.addEventListener(event_name, enhanced_listener)\n\n\t\t\t// Returns `unlisten()`\n\t\t\treturn () => _websocket.removeEventListener(event_name, enhanced_listener)\n\t\t},\n\n\t\tonOpen(listener)\n\t\t{\n\t\t\treturn websocket.listen('open', listener)\n\t\t},\n\n\t\tonClose(listener)\n\t\t{\n\t\t\treturn websocket.listen('close', listener)\n\t\t},\n\n\t\tonError(listener)\n\t\t{\n\t\t\treturn websocket.listen('error', listener)\n\t\t},\n\n\t\tonMessage(listener)\n\t\t{\n\t\t\treturn websocket.listen('message', (event, store) =>\n\t\t\t{\n\t\t\t\treturn listener(JSON.parse(event.data), store)\n\t\t\t})\n\t\t},\n\n\t\t// For advanced use cases\n\t\tsocket : _websocket\n\t}\n\n\tif (autoDispatch !== false)\n\t{\n\t\twebsocket.onMessage((message, store) =>\n\t\t{\n\t\t\tif (message.type)\n\t\t\t{\n\t\t\t\tstore.dispatch(message)\n\t\t\t}\n\t\t})\n\t}\n\n\treturn window.websocket = websocket\n}\n\n// Returns a value ranging from [value * (1 - amount)] to (value * (1 + amount))\nfunction jitter(value, amount = 0.2)\n{\n\treturn value * ((1 - amount) + amount * 2 * Math.random())\n}"]}