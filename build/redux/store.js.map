{"version":3,"sources":["../../source/redux/store.js"],"names":["create_store","settings","data","get_history","http_client","options","reducer","routes","redux_middleware","redux_store_enhancers","asynchronous_action_event_naming","preload","http","server","devtools","stats","on_navigate","middleware","push","error","helpers","history","basename","store_enhancers","process","env","NODE_ENV","window","devToolsExtension","component","instrument","persistState","location","href","match","store","create_reducer","hot_reload","replaceReducer","hotReload","reducers","replaceable_state","event","state","action","type"],"mappings":";;;;;;;;;;kBAQwBA,Y;;AARxB;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEe,SAASA,YAAT,CAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,WAAtC,EAAmDC,WAAnD,EAAgEC,OAAhE,EACf;AAAA,KAGEC,OAHF,GAWGL,QAXH,CAGEK,OAHF;AAAA,KAIEC,MAJF,GAWGN,QAXH,CAIEM,MAJF;AAAA,KAKEC,gBALF,GAWGP,QAXH,CAKEO,gBALF;AAAA,KAMEC,qBANF,GAWGR,QAXH,CAMEQ,qBANF;AAAA,KAOEC,gCAPF,GAWGT,QAXH,CAOES,gCAPF;AAAA,KAQEC,OARF,GAWGV,QAXH,CAQEU,OARF;AAAA,KASEC,IATF,GAWGX,QAXH,CASEW,IATF;AAAA,KAeEC,MAfF,GAoBGR,OApBH,CAeEQ,MAfF;AAAA,KAgBEC,QAhBF,GAoBGT,OApBH,CAgBES,QAhBF;AAAA,KAiBEC,KAjBF,GAoBGV,OApBH,CAiBEU,KAjBF;AAAA,KAkBEC,WAlBF,GAoBGX,OApBH,CAkBEW,WAlBF;;AAsBC;;AACA,KAAMC,aAAa,EAAnB;;AAEA;AACA,KAAIT,gBAAJ,EACA;AACCS,aAAWC,IAAX,oDAAmBV,kBAAnB;AACA;;AAED;AACAS,YAAWC,IAAX;AAEC;AACA,uCAECd,WAFD,EAGCM,gCAHD,EAICG,MAJD,EAKCD,KAAKO,KALN,EAMChB,WAND,CAHD;;AAYC;AACA,qCAECU,MAFD,EAGCZ,SAASkB,KAHV,EAICR,WAAWA,QAAQS,OAJpB,EAKCb,MALD,EAMCJ,WAND,EAOCF,SAASoB,OAAT,CAAiBhB,OAAjB,CAAyBiB,QAP1B,EAQCP,KARD,EASCC,WATD,CAbD;;AAyBC;AACA,kCAAmBb,WAAnB,CA1BD;;AA6BA;AACA,KAAMoB,kBACN;AACC;AACA;AACA,yCAAmBN,UAAnB,CAHD,CADA;;AAOA;AACA,KAAIR,qBAAJ,EACA;AACCc,kBAAgBL,IAAhB,yDAAwBT,uBAAxB;AACA;;AAED;AACA,KAAIe,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACb,MAA1C,IAAoDC,QAAxD,EACA;AACCS,kBAAgBL,IAAhB;AAEC;AACAS,SAAOC,iBAAP,GAA2BD,OAAOC,iBAAP,EAA3B,GAAwDd,SAASe,SAAT,CAAmBC,UAAnB,EAHzD;AAIC;AACAhB,WAASiB,YAAT,CAAsBJ,OAAOK,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,6BAA3B,CAAtB,CALD;AAOA;;AAED;AACA,KAAMC,QAAQ,gCAAWZ,eAAX,sBAAyCa,eAAe9B,OAAf,CAAzC,EAAkEJ,IAAlE,CAAd;;AAEA;AACA;AACA,KAAI,CAACW,MAAL,EACA;AACC;AACAsB,QAAME,UAAN,GAAmB;AAAA,UAAWF,MAAMG,cAAN,CAAqBF,eAAe9B,OAAf,CAArB,CAAX;AAAA,GAAnB;AACA;AACA6B,QAAMI,SAAN,GAAkBJ,MAAME,UAAxB;AACA;;AAED;AACA,QAAOF,KAAP;AACA;;AAED,SAASC,cAAT,CAAwBI,QAAxB,EACA;AACC,QAAOC,kBAAkB,4BAAgBD,QAAhB,CAAlB,qBAAP;AACA;;AAED,SAASC,iBAAT,CAA2BnC,OAA3B,EAAoCoC,KAApC,EACA;AACC,QAAO,UAASC,KAAT,EAAgBC,MAAhB,EACP;AACC,UAAQA,OAAOC,IAAf;AAEC,QAAKH,KAAL;AACC,WAAOpC,QAAQsC,OAAOD,KAAf,EAAsBC,MAAtB,CAAP;AACD;AACC,WAAOtC,QAAQqC,KAAR,EAAeC,MAAf,CAAP;AALF;AAOA,EATD;AAUA","file":"store.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\n\nimport asynchronous_middleware from './middleware/asynchronous middleware'\nimport preloading_middleware from './middleware/preloading middleware'\nimport history_middleware from './middleware/history middleware'\n\nimport { LoadState } from './actions'\n\nexport default function create_store(settings, data, get_history, http_client, options)\n{\n\tconst\n\t{\n\t\treducer,\n\t\troutes,\n\t\tredux_middleware,\n\t\tredux_store_enhancers,\n\t\tasynchronous_action_event_naming,\n\t\tpreload,\n\t\thttp\n\t}\n\t= settings\n\n\tconst\n\t{\n\t\tserver,\n\t\tdevtools,\n\t\tstats,\n\t\ton_navigate\n\t}\n\t= options\n\n\t// Redux middleware\n\tconst middleware = []\n\n\t// User may supply his own Redux middleware\n\tif (redux_middleware)\n\t{\n\t\tmiddleware.push(...redux_middleware())\n\t}\n\n\t// Built-in middleware\n\tmiddleware.push\n\t(\n\t\t// Asynchronous middleware (e.g. for HTTP Ajax calls).\n\t\tasynchronous_middleware\n\t\t(\n\t\t\thttp_client,\n\t\t\tasynchronous_action_event_naming,\n\t\t\tserver,\n\t\t\thttp.error,\n\t\t\tget_history\n\t\t),\n\n\t\t// Makes @preload() decorator work.\n\t\tpreloading_middleware\n\t\t(\n\t\t\tserver,\n\t\t\tsettings.error,\n\t\t\tpreload && preload.helpers, \n\t\t\troutes,\n\t\t\tget_history,\n\t\t\tsettings.history.options.basename,\n\t\t\tstats,\n\t\t\ton_navigate\n\t\t),\n\n\t\t// Performs `redirect` and `goto` actions on `history`\n\t\thistory_middleware(get_history)\n\t)\n\n\t// Redux \"store enhancers\"\n\tconst store_enhancers =\n\t[\n\t\t// Redux middleware are applied in reverse order\n\t\t// (which is counter-intuitive)\n\t\tapplyMiddleware(...middleware)\n\t]\n\n\t// User may supply his own Redux store enhancers\n\tif (redux_store_enhancers)\n\t{\n\t\tstore_enhancers.push(...redux_store_enhancers())\n\t}\n\n\t// Add Redux DevTools (if they're enabled)\n\tif (process.env.NODE_ENV !== 'production' && !server && devtools)\n\t{\n\t\tstore_enhancers.push\n\t\t(\n\t\t\t// Provides support for DevTools\n\t\t\twindow.devToolsExtension ? window.devToolsExtension() : devtools.component.instrument(),\n\t\t\t// Lets you write ?debug_session=<name> in address bar to persist debug sessions\n\t\t\tdevtools.persistState(window.location.href.match(/[?&]debug_session=([^&]+)\\b/))\n\t\t)\n\t}\n\n\t// Create Redux store\n\tconst store = compose(...store_enhancers)(createStore)(create_reducer(reducer), data)\n\n\t// On the client side, add `hotReload()` function to the `store`.\n\t// (could just add this function to `window` but adding it to the `store` fits more)\n\tif (!server)\n\t{\n\t\t// `hot_reload` helper function gives the web application means to hot reload its Redux reducers\n\t\tstore.hot_reload = reducer => store.replaceReducer(create_reducer(reducer))\n\t\t// Add camelCase alias\n\t\tstore.hotReload = store.hot_reload\n\t}\n\n\t// Return the Redux store\n\treturn store\n}\n\nfunction create_reducer(reducers)\n{\n\treturn replaceable_state(combineReducers(reducers), LoadState)\n}\n\nfunction replaceable_state(reducer, event)\n{\n\treturn function(state, action)\n\t{\n\t\tswitch (action.type)\n\t\t{\n\t\t\tcase event:\n\t\t\t\treturn reducer(action.state, action)\n\t\t\tdefault:\n\t\t\t\treturn reducer(state, action)\n\t\t}\n\t}\n}"]}