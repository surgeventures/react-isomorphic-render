{"version":3,"sources":["../../source/redux/normalize.js"],"names":["normalize_common_settings","settings","options","undefined","Error","full","routes","reducer","wrapper","Wrapper","store","children","preload","catch","asynchronousActionEventNaming","asynchronous_action_event_naming","asynchronousActionHandlerStatePropertyNaming","asynchronous_action_handler_state_property_naming","reduxMiddleware","redux_middleware","reduxStoreEnhancers","redux_store_enhancers","parseDates","parse_dates","history","unexpected_history_keys","filter","key","length","console","log","http","authentication"],"mappings":"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","file":"normalize.js","sourcesContent":["import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { clone } from '../helpers'\n\n// Normalizes common settings\nexport default function normalize_common_settings(settings, options = {})\n{\n\tif (settings === undefined)\n\t{\n\t\tthrow new Error(`Common settings weren't passed.`)\n\t}\n\n\tif (typeof settings !== 'object')\n\t{\n\t\tthrow new Error(`Expected a settings object, got ${typeof settings}: ${settings}`)\n\t}\n\n\tsettings = clone(settings)\n\n\tif (options.full !== false)\n\t{\n\t\tif (!settings.routes)\n\t\t{\n\t\t\tthrow new Error(`\"routes\" parameter is required`)\n\t\t}\n\n\t\tif (!settings.reducer)\n\t\t{\n\t\t\tthrow new Error(`\"reducer\" parameter is required`)\n\t\t}\n\t}\n\n\tif (!settings.wrapper)\n\t{\n\t\t// By default it wraps everything with Redux'es `<Provider/>`.\n\t\tsettings.wrapper = function Wrapper({ store, children })\n\t\t{\n\t\t\treturn <Provider store={ store }>{ children }</Provider>\n\t\t}\n\t}\n\n\t// For legacy 10.x version upgrades\n\tif (settings.preload && settings.preload.catch)\n\t{\n\t\tthrow new Error('`settings.preload.catch` has been moved to `settings.error` and it is no longer required to rethrow the error in the end because it is now being rethrown automatically internally.')\n\t}\n\n\t// For legacy 10.x version upgrades\n\tif (settings.catch)\n\t{\n\t\tthrow new Error('`settings.catch` has been moved to `settings.error` and it is no longer required to rethrow the error in the end because it is now being rethrown automatically internally.')\n\t}\n\n\t// camelCase aliasing\n\tif (settings.asynchronousActionEventNaming)\n\t{\n\t\tsettings.asynchronous_action_event_naming = settings.asynchronousActionEventNaming\n\t\tdelete settings.asynchronousActionEventNaming\n\t}\n\n\t// camelCase aliasing\n\tif (settings.asynchronousActionHandlerStatePropertyNaming)\n\t{\n\t\tsettings.asynchronous_action_handler_state_property_naming = settings.asynchronousActionHandlerStatePropertyNaming\n\t\tdelete settings.asynchronousActionHandlerStatePropertyNaming\n\t}\n\n\t// camelCase aliasing\n\tif (settings.reduxMiddleware)\n\t{\n\t\tsettings.redux_middleware = settings.reduxMiddleware\n\t\tdelete settings.reduxMiddleware\n\t}\n\n\t// camelCase aliasing\n\tif (settings.reduxStoreEnhancers)\n\t{\n\t\tsettings.redux_store_enhancers = settings.reduxStoreEnhancers\n\t\tdelete settings.reduxStoreEnhancers\n\t}\n\n\t// camelCase aliasing\n\tif (settings.parseDates !== undefined)\n\t{\n\t\tsettings.parse_dates = settings.parseDates\n\t\tdelete settings.parseDates\n\t}\n\n\t// Default value for `parse_dates` is `true`\n\tif (settings.parse_dates !== false)\n\t{\n\t\tsettings.parse_dates = true\n\t}\n\n\tif (!settings.history)\n\t{\n\t\tsettings.history = {}\n\t}\n\n\t// `10.x` legacy `history` setting support\n\tconst unexpected_history_keys = Object.keys(settings.history).filter(key => key !== 'options' && key !== 'wrap')\n\n\tif (unexpected_history_keys.length > 0)\n\t{\n\t\tconsole.log('Unexpected `history` setting keys found:', unexpected_history_keys)\n\t\tconsole.log('Transforming legacy `history` setting into a new one: `history: { options }`')\n\t\t\n\t\tsettings.history =\n\t\t{\n\t\t\toptions : settings.history\n\t\t}\n\t}\n\n\t// Default history options (non-empty)\n\tif (!settings.history.options)\n\t{\n\t\tsettings.history.options = {}\n\t}\n\n\tif (!settings.http)\n\t{\n\t\tsettings.http = {}\n\t}\n\n\tif (!settings.authentication)\n\t{\n\t\tsettings.authentication = {}\n\t}\n\n\t// This message was too noisy printing on each page render.\n\t//\n\t// // For those who don't wish to proxy API requests to API servers\n\t// // and prefer to query those API servers directly (for whatever reasons).\n\t// // Direct API calls will contain user's cookies and HTTP headers (e.g. JWT token).\n\t// //\n\t// // Therefore warn about authentication token leakage\n\t// // in case a developer supplies his own custom `format_url` function.\n\t// //\n\t// if (settings.http.url)\n\t// {\n\t// \tconsole.log('[react-isomorphic-render] The default `http.url` formatter only allows requesting local paths therefore protecting authentication token (and cookies) from leaking to a 3rd party. Since you supplied your own `http.url` formatting function, implementing such anti-leak guard is your responsibility now.')\n\t// }\n\n\treturn settings\n}"]}