{"version":3,"sources":["../../../source/redux/server/server.js"],"names":["settings","protected_cookie_value","application","request","cookies","initialize","get_history","extension_javascript","afterwards","ctx","http_client","set_cookies","cookie","set","parse_dates","define_json_date_parser","store_state","store","getState","router","host","undefined","port","secure","clone_request","store_data","server","_render","options","routes","minify","fromString","code","indexOf","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;uEAiBO,iBAA0BA,QAA1B;AAAA,MAAsCC,sBAAtC,SAAsCA,sBAAtC;AAAA,MAA8DC,WAA9D,SAA8DA,WAA9D;AAAA,MAA2EC,OAA3E,SAA2EA,OAA3E;AAAA,MAAoFC,OAApF,SAAoFA,OAApF;AAAA,MAA6FC,UAA7F,SAA6FA,UAA7F;AAAA,MAAyGC,WAAzG,SAAyGA,WAAzG;AAAA,sCAiCGC,oBAjCH,EA0DGC,UA1DH;AAAA;AAAA;AAAA;AAAA;AA0DGA,gBA1DH,YA0DGA,UA1DH,CA0DcC,GA1Dd,EA2DN;AAAA;AAAA;AAAA;;AAAA;AACC,wDAAqBC,YAAYC,WAAjC,4GACA;AAAA,aADWC,MACX;;AACCH,aAAII,GAAJ,CAAQ,YAAR,EAAsBD,MAAtB;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKC,OAhEK;;AAiCGL,0BAjCH,YAiCGA,oBAjCH,GAkCN;AACC,WAAIA,uBAAuB,EAA3B;;AAEA;AACA,WAAIP,SAASc,WAAb,EACA;AACCP,6CAAmCQ,uBAAnC;AACA;;AAED,WAAMC,cAAcC,MAAMC,QAAN,EAApB;AACA;AACA,cAAOF,YAAYG,MAAnB;;AAEA;AACA;AACA;AACA;AACAZ;AACAA,qEAA6D,yBAAe,+BAAoBS,WAApB,CAAf,CAA7D,IAAkHhB,SAASc,WAAT,GAAuB,oBAAvB,GAA8C,EAAhK;AACAP;;AAEA,cAAOA,oBAAP;AACA,OAxDK;;AAEN;AACIU,WAHE;;AAKN;;AACMP,iBANA,GAMc,0BAAmBV,QAAnB,EAA6B;AAAA,cAAMiB,KAAN;AAAA,OAA7B,EAA0ChB,sBAA1C,EACpB;AACCmB,aAAgBlB,cAAcA,YAAYkB,IAA1B,GAAiCC,SADlD;AAECC,aAAgBpB,cAAcA,YAAYoB,IAA1B,GAAiCD,SAFlD;AAGCE,eAAgBrB,cAAcA,YAAYqB,MAA1B,GAAmC,KAHpD;AAICC,sBAAgBrB,OAJjB;AAKCC;AALD,OADoB,CANd;;AAeN;;AAEA;;AACIqB,gBAlBE,GAkBW,EAlBX;;AAoBN;AACA;;AArBM,WAsBFpB,UAtBE;AAAA;AAAA;AAAA;;AAAA;AAAA,aAwBcA,WAAWK,WAAX,EAAwB,EAAEP,gBAAF,EAAxB,CAxBd;;AAAA;AAwBLsB,gBAxBK;;AAAA;;AA2BN;AACAR,cAAQ,qBAAajB,QAAb,EAAuByB,UAAvB,EAAmCnB,WAAnC,EAAgDI,WAAhD,EACR;AACCgB,eAAS;AADV,OADQ,CAAR;;AA5BM,uCAkEC,EAAET,YAAF,EAASV,0CAAT,EAA+BC,sBAA/B,EAlED;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;iBAAeH,U;;;;;AAqEtB;AACA;AACA;AACA;AACA;;;kBAlFwBsB,O;;AARxB;;;;AAEA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,OAAT,CAAiBC,OAAjB,EACf;AACC,QAAO,iDAEHA,OAFG;AAGNC,UAAQ,OAAOD,QAAQC,MAAf,KAA0B,UAA1B,GAAuCD,QAAQC,MAAR,CAAeZ,KAAf,CAAvC,GAA+DW,QAAQC;AAHzE,IAAP;AAKA;;AA4ED,IAAMd,0BAA0B,mBAASe,MAAT,uPAehC,EAAEC,YAAY,IAAd,EAfgC,EAeVC,IAftB;;AAiBA;AACA,IAAIjB,wBAAwBkB,OAAxB,CAAgC,IAAhC,MAA0C,CAAC,CAA/C,EACA;AACC,OAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACA","file":"server.js","sourcesContent":["import UglifyJS from 'uglify-js'\n\nimport { ISO_date_regexp } from '../../date parser'\nimport { safe_json_stringify } from '../../page-server/html'\nimport render from './render'\nimport create_store from '../store'\nimport create_http_client from '../http client'\n\nexport default function _render(options)\n{\n\treturn render\n\t({\n\t\t...options,\n\t\troutes: typeof options.routes === 'function' ? options.routes(store) : options.routes\n\t})\n}\n\nexport async function initialize(settings, { protected_cookie_value, application, request, cookies, initialize, get_history })\n{\n\t// Redux store\n\tlet store\n\n\t// Create HTTP client (Redux action creator `http` utility)\n\tconst http_client = create_http_client(settings, () => store, protected_cookie_value,\n\t{\n\t\thost          : application ? application.host : undefined,\n\t\tport          : application ? application.port : undefined,\n\t\tsecure        : application ? application.secure : false,\n\t\tclone_request : request,\n\t\tcookies\n\t})\n\n\t// Create Redux store\n\n\t// Initial store data\n\tlet store_data = {}\n\n\t// Supports custom preloading before the page is rendered\n\t// (for example to authenticate the user and retrieve user selected language)\n\tif (initialize)\n\t{\n\t\tstore_data = await initialize(http_client, { request })\n\t}\n\n\t// Create Redux store\n\tstore = create_store(settings, store_data, get_history, http_client,\n\t{\n\t\tserver : true\n\t})\n\n\tfunction extension_javascript()\n\t{\n\t\tlet extension_javascript = ''\n\n\t\t// JSON Date deserializer\n\t\tif (settings.parse_dates)\n\t\t{\n\t\t\textension_javascript += `<script>${define_json_date_parser}</script>`\n\t\t}\n\n\t\tconst store_state = store.getState()\n\t\t// Remove `redux-router` data from store\n\t\tdelete store_state.router\n\n\t\t// Store data will be reloaded into the store on the client-side.\n\t\t// All forward slashes are escaped to prevent XSS attacks.\n\t\t// Another solution would be replacing with `\\uxxxx` sequences.\n\t\t// https://medium.com/node-security/the-most-common-xss-vulnerability-in-react-js-applications-2bdffbcc1fa0\n\t\textension_javascript += `<script>`\n\t\textension_javascript += `window._redux_state = JSON.parse(${ JSON.stringify(safe_json_stringify(store_state)) }${ settings.parse_dates ? ', JSON.date_parser' : '' })`\n\t\textension_javascript += `</script>`\n\n\t\treturn extension_javascript\n\t}\n\n\tfunction afterwards(ctx)\n\t{\n\t\tfor (const cookie of http_client.set_cookies)\n\t\t{\n\t\t\tctx.set('Set-Cookie', cookie)\n\t\t}\n\t}\n\n\treturn { store, extension_javascript, afterwards }\n}\n\n// JSON date deserializer\n// use as the second, 'reviver' argument to JSON.parse(json, JSON.date_parser);\n//\n// http://stackoverflow.com/questions/14488745/javascript-json-date-deserialization/23691273#23691273\n//\nconst define_json_date_parser = UglifyJS.minify\n(`\nif (!JSON.date_parser)\n{\n\tJSON.date_parser = function(key, value)\n\t{\n\t\tif (typeof value === 'string' && /^${ISO_date_regexp}$/.test(value))\n\t\t{\n\t\t\treturn new Date(value)\n\t\t}\n\n\t\treturn value\n\t}\n}\n`,\n{ fromString: true }).code\n\n// Just to be extra safe from XSS attacks\nif (define_json_date_parser.indexOf('</') !== -1)\n{\n\tthrow new Error('JSON Date parser XSS vulnerability detected')\n}"]}