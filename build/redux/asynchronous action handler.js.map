{"version":3,"sources":["../../source/redux/asynchronous action handler.js"],"names":["action","create_handler","reset_error","state_connector","options","handler","Error","type","namespace","promise","cancelPrevious","event","payload","result","add_state_properties","state","property","create_redux_handlers","parameters","apply","concat","http","parameter","handle","undefined","settings","full","handlers","registered_state_properties","reducer","initial_state","action_data","handler_argument","Object","prototype","hasOwnProperty","call","error","console","push","arguments","addStateProperties","on_result","asynchronous_action_event_naming","asynchronous_action_handler_state_property_naming","pending_event_name","success_event_name","error_event_name","pending_property_name","error_property_name","new_state","connect_state","property_name"],"mappings":"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","file":"asynchronous action handler.js","sourcesContent":["import { event_name } from './naming'\nimport normalize_common_settings from './normalize'\n\n// Returns Redux action creator.\n// `promise` is for backwards compatibility:\n// it has been renamed to `action` since `9.0.8`.\nexport function action(options, handler)\n{\n\t// Sanity check\n\tif (!handler)\n\t{\n\t\tthrow new Error('You must pass \"handler\" as the second argument of \"action()\"')\n\t}\n\n\tconst\n\t{\n\t\ttype,\n\t\tnamespace,\n\t\tpromise,\n\t\taction,\n\t\tcancelPrevious\n\t}\n\t= options\n\n\tlet\n\t{\n\t\tevent,\n\t\tpayload,\n\t\tresult\n\t}\n\t= options\n\n\t// For those who still prefer `type` over `event`\n\tif (!event && type)\n\t{\n\t\tevent = type\n\t}\n\n\t// If `result` is a property name,\n\t// then add that property to the `connector`.\n\tif (typeof result === 'string')\n\t{\n\t\thandler.add_state_properties(result)\n\t}\n\n\t// Default \"on result\" handler\n\tresult = result || (state => state)\n\n\t// Asynchronous action\n\tif (promise || action)\n\t{\n\t\t// Normalize `result` reducer into a function\n\t\tif (typeof result === 'string')\n\t\t{\n\t\t\tconst property = result\n\t\t\tresult = (state, result) =>\n\t\t\t({\n\t\t\t\t...state,\n\t\t\t\t[property]: result\n\t\t\t})\n\t\t}\n\n\t\t// Adds Redux reducers handling events:\n\t\t//\n\t\t//   * pending\n\t\t//   * success\n\t\t//   * error\n\t\t//\n\t\tcreate_redux_handlers(handler, namespace, event, result)\n\n\t\t// Redux \"action creator\"\n\t\treturn (...parameters) =>\n\t\t({\n\t\t\tevent   : event_name(namespace, event),\n\t\t\tpromise : http => (action || promise).apply(this, parameters.concat(http)),\n\t\t\tcancelPrevious\n\t\t})\n\t}\n\n\t// Synchronous action\n\n\t// Normalize `result` reducer into a function\n\tif (typeof result === 'string')\n\t{\n\t\tpayload = parameter => ({ parameter })\n\n\t\tconst property = result\n\t\tresult = (state, action) =>\n\t\t({\n\t\t\t...state,\n\t\t\t[property]: action.parameter\n\t\t})\n\t}\n\n\t// Reducer\n\thandler.handle(event_name(namespace, event), result)\n\n\t// Redux \"action creator\"\n\treturn (...parameters) =>\n\t({\n\t\ttype : event_name(namespace, event),\n\t\t...(payload ? payload.apply(this, parameters) : undefined)\n\t})\n}\n\n// Creates Redux handler object\n// (which will eventually be transformed into a reducer)\nexport function create_handler(settings)\n{\n\tsettings = normalize_common_settings(settings, { full: false })\n\n\tconst handlers = {}\n\tconst registered_state_properties = []\n\n\tconst result =\n\t{\n\t\tsettings,\n\n\t\thandle(event, handler)\n\t\t{\n\t\t\thandlers[event] = handler\n\t\t},\n\n\t\treducer(initial_state = {})\n\t\t{\n\t\t\t// applies a handler based on the action type\n\t\t\t// (is copy & paste'd for all action response handlers)\n\t\t\treturn function(state = initial_state, action_data = {})\n\t\t\t{\n\t\t\t\tconst handler = handlers[action_data.type]\n\n\t\t\t\tif (!handler)\n\t\t\t\t{\n\t\t\t\t\treturn state\n\t\t\t\t}\n\n\t\t\t\tlet handler_argument = action_data\n\n\t\t\t\t// if (action_data.result !== undefined)\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(action_data, 'result'))\n\t\t\t\t{\n\t\t\t\t\thandler_argument = action_data.result\n\t\t\t\t}\n\t\t\t\telse if (action_data.error !== undefined)\n\t\t\t\t{\n\t\t\t\t\thandler_argument = action_data.error\n\t\t\t\t}\n\t\t\t\t// This proved to be not that convenient\n\t\t\t\t// // When only `type` of a Redux \"action\" is set\n\t\t\t\t// else if (Object.keys(action_data).length === 1)\n\t\t\t\t// {\n\t\t\t\t// \thandler_argument = undefined\n\t\t\t\t// }\n\n\t\t\t\t// For some strange reason Redux didn't report\n\t\t\t\t// these errors to the console, hence the manual `console.error`.\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treturn handler(state, handler_argument)\n\t\t\t\t}\n\t\t\t\tcatch (error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error)\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tregistered_state_properties,\n\n\t\tadd_state_properties()\n\t\t{\n\t\t\tregistered_state_properties.push.apply(registered_state_properties, arguments)\n\t\t}\n\t}\n\n\tresult.addStateProperties = result.add_state_properties\n\n\treturn result\n}\n\n// Adds handlers for:\n//\n//   * pending\n//   * done\n//   * failed\n//   * reset error\n//\nfunction create_redux_handlers(handler, namespace, event, on_result)\n{\n\tif (!handler.settings.asynchronous_action_event_naming)\n\t{\n\t\tthrow new Error(\"`asynchronousActionEventNaming` function parameter was not passed\")\n\t}\n\t\n\tif (!handler.settings.asynchronous_action_handler_state_property_naming)\n\t{\n\t\tthrow new Error(\"`asynchronousActionHandlerStatePropertyNaming` function parameter was not passed\")\n\t}\n\n\tconst\n\t[\n\t\tpending_event_name,\n\t\tsuccess_event_name,\n\t\terror_event_name\n\t]\n\t= handler.settings.asynchronous_action_event_naming(event)\n\n\tconst pending_property_name = handler.settings.asynchronous_action_handler_state_property_naming(pending_event_name)\n\tconst error_property_name   = handler.settings.asynchronous_action_handler_state_property_naming(error_event_name)\n\n\t// This info will be used in `storeConnector`\n\thandler.add_state_properties(pending_property_name, error_property_name)\n\n\t// When Promise is created,\n\t// clear `error`,\n\t// set `pending` flag.\n\thandler.handle(event_name(namespace, pending_event_name), (state, result) =>\n\t({\n\t\t...state,\n\t\t// Set `pending` flag\n\t\t[pending_property_name] : true,\n\t\t// Clear `error`\n\t\t[error_property_name] : undefined\n\t}))\n\n\t// When Promise succeeds\n\thandler.handle(event_name(namespace, success_event_name), (state, result) =>\n\t{\n\t\t// This will be the new Redux state\n\t\tconst new_state = on_result(state, result)\n\n\t\t// Clear `pending` flag\n\t\tnew_state[pending_property_name] = false\n\n\t\t// Return the new Redux state\n\t\treturn new_state\n\t})\n\n\t// When Promise fails, clear `pending` flag and set `error`.\n\t// Can also clear `error` when no `error` is passed as part of an action.\n\thandler.handle(event_name(namespace, error_event_name), (state, error) =>\n\t({\n\t\t...state,\n\t\t[pending_property_name] : false,\n\t\t[error_property_name] : error\n\t}))\n}\n\n// Returns Redux action creator for resetting error.\nexport function reset_error({ namespace, event }, handler)\n{\n\tconst\n\t[\n\t\tpending_event_name,\n\t\tsuccess_event_name,\n\t\terror_event_name\n\t]\n\t= handler.settings.asynchronous_action_event_naming(event)\n\n\t// Redux \"action creator\"\n\treturn () =>\n\t({\n\t\ttype  : event_name(namespace, error_event_name),\n\t\terror : null\n\t})\n}\n\n// A little helper for Redux `@connect()`\nexport function state_connector(handler)\n{\n\treturn function connect_state(state)\n\t{\n\t\tconst result = {}\n\n\t\tfor (let property_name of handler.registered_state_properties)\n\t\t{\n\t\t\tresult[property_name] = state[property_name]\n\t\t}\n\n\t\treturn result\n\t}\n}"]}