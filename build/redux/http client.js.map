{"version":3,"sources":["../../source/redux/http client.js"],"names":["create_http_client","settings","get_store","protected_cookie_value","options","on_before_send","catch_to_retry","get_access_token","http","request","store","catch","error","retryCount","helpers","authentication","accessToken","getCookie","format_url","url","parse_dates","authentication_token_header","header","protected_cookie","protectedCookie"],"mappings":";;;;;;;;;;kBAEwBA,kB;;AAFxB;;;;;;AAEe,SAASA,kBAAT,CAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,sBAAjD,EACf;AAAA,KADwFC,OACxF,uEADkG,EAClG;;AACC,KAAIC,uBAAJ;AACA,KAAIC,uBAAJ;AACA,KAAIC,yBAAJ;;AAEA;AACA,KAAIN,SAASO,IAAT,CAAcC,OAAlB,EACA;AACCJ,mBAAiB,wBAACI,OAAD,EACjB;AACC;AACA;AACAR,YAASO,IAAT,CAAcC,OAAd,CAAsBA,OAAtB,EACA;AACCC,WAAOR;AADR,IADA;AAIA,GARD;AASA;;AAED;AACA,KAAID,SAASO,IAAT,CAAcG,KAAlB,EACA;AACCL,mBAAiB,wBAACM,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EACjB;AACC,UAAOb,SAASO,IAAT,CAAcG,KAAd,CAAoBC,KAApB,EAA2BC,UAA3B,6BAEHC,OAFG;AAGNJ,WAAOR;AAHD,MAAP;AAKA,GAPD;AAQA;;AAED;AACA,KAAID,SAASc,cAAT,CAAwBC,WAA5B,EACA;AACCT,qBAAmB,0BAACU,SAAD,EAAYH,OAAZ,EACnB;AACC,UAAOb,SAASc,cAAT,CAAwBC,WAAxB,CAAoCC,SAApC,6BAEHH,OAFG;AAGNJ,WAAOR;AAHD,MAAP;AAKA,GAPD;AAQA;;AAED,QAAO;AAENG,gCAFM;AAGNC,gCAHM;AAINC,oCAJM;AAKNW,cAA8BjB,SAASO,IAAT,CAAcW,GALtC;AAMNC,eAA8BnB,SAASmB,WANjC;AAONC,+BAA8BpB,SAASc,cAAT,CAAwBO,MAPhD;AAQNC,oBAA8BtB,SAASc,cAAT,CAAwBS,eARhD;AASNrB;AATM,IAUHC,OAVG,EAAP;AAYA","file":"http client.js","sourcesContent":["import Http_client from '../http client'\n\nexport default function create_http_client(settings, get_store, protected_cookie_value, options = {})\n{\n\tlet on_before_send\n\tlet catch_to_retry\n\tlet get_access_token\n\n\t// Add `store` helper to `http.request`\n\tif (settings.http.request)\n\t{\n\t\ton_before_send = (request) =>\n\t\t{\n\t\t\t// If using Redux, then add `store` as a parameter \n\t\t\t// for `http_client` customization function\n\t\t\tsettings.http.request(request,\n\t\t\t{\n\t\t\t\tstore: get_store()\n\t\t\t})\n\t\t}\n\t}\n\n\t// Add `store` and `http` helpers to `http.catch`\n\tif (settings.http.catch)\n\t{\n\t\tcatch_to_retry = (error, retryCount, helpers) =>\n\t\t{\n\t\t\treturn settings.http.catch(error, retryCount,\n\t\t\t{\n\t\t\t\t...helpers,\n\t\t\t\tstore: get_store()\n\t\t\t})\n\t\t}\n\t}\n\n\t// Add `store` helper to `authentication.accessToken`\n\tif (settings.authentication.accessToken)\n\t{\n\t\tget_access_token = (getCookie, helpers) =>\n\t\t{\n\t\t\treturn settings.authentication.accessToken(getCookie,\n\t\t\t{\n\t\t\t\t...helpers,\n\t\t\t\tstore: get_store()\n\t\t\t})\n\t\t}\n\t}\n\n\treturn new Http_client\n\t({\n\t\ton_before_send,\n\t\tcatch_to_retry,\n\t\tget_access_token,\n\t\tformat_url                  : settings.http.url,\n\t\tparse_dates                 : settings.parse_dates,\n\t\tauthentication_token_header : settings.authentication.header,\n\t\tprotected_cookie            : settings.authentication.protectedCookie,\n\t\tprotected_cookie_value,\n\t\t...options\n\t})\n}"]}