{"version":3,"sources":["../source/client.js"],"names":["client_side_render","get_protected_cookie_value","create_history","should_instrument_history_pop_state_listeners","history","render","render_parameters","wrapper","translation","protected_cookie_value","window","_protected_cookie_value","locale","_locale","messages","_locale_messages","render_page","to","document","getElementById","create_page_element","element","props","createElement","then","result","rerender","protectedCookie","location","settings","parameters","call_listener","pop_state_listeners","initial_location","addEventListener","type","listener","flag","original_listener","event","get_history_pop_state_location","push","original","istrumented","removeEventListener","pop_state_listener","splice","indexOf","apply","arguments","state","get_history_state_location","history_state","key","pathname","search","hash","undefined"],"mappings":"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","file":"client.js","sourcesContent":["import React from 'react'\nimport createHistory from 'history/lib/createBrowserHistory'\nimport { createLocation } from 'history/lib/LocationUtils'\nimport { readState } from 'history/lib/DOMStateStorage'\nimport { useRouterHistory } from 'react-router'\nimport useBeforeUnload from 'history/lib/useBeforeUnload'\n\nimport _create_history from './history'\n\n// Performs client-side rendering\n// along with varios stuff like loading localized messages.\n//\n// This function is intended to be wrapped by another function\n// which (in turn) is gonna be called from the project's code on the client-side.\n//\nexport default function client_side_render({ history, render, render_parameters = {}, wrapper, translation })\n{\n\tconst protected_cookie_value = get_protected_cookie_value()\n\t// Erase the protected cookie value global variable\n\t// (so that it's less likely to be stolen via an XSS attack)\n\tdelete window._protected_cookie_value\n\n\t// Initialize locale\n\tconst locale = window._locale\n\tif (locale)\n\t{\n\t\tdelete window._locale\n\t}\n\n\t// Localized messages\n\tlet messages = window._locale_messages\n\tif (messages)\n\t{\n\t\tdelete window._locale_messages\n\t}\n\n\t// renders current React page.\n\t// returns the rendered React page component.\n\tfunction render_page()\n\t{\n\t\t// Returns a Promise for React component.\n\t\t//\n\t\treturn render\n\t\t({\n\t\t\t...render_parameters,\n\t\t\tto: document.getElementById('react'),\n\t\t\tcreate_page_element : async (element, props = {}) =>\n\t\t\t{\n\t\t\t\t// If no i18n is required, then simply create Page element\n\t\t\t\tif (!locale)\n\t\t\t\t{\n\t\t\t\t\treturn React.createElement(wrapper, props, element)\n\t\t\t\t}\n\n\t\t\t\t// Translation loading function may be passed\n\t\t\t\t// (its main purpose is to enable Webpack HMR\n\t\t\t\t//  in dev mode for translated messages)\n\t\t\t\tif (translation)\n\t\t\t\t{\n\t\t\t\t\tmessages = await translation(locale)\n\t\t\t\t}\n\n\t\t\t\t// Load translations and then create page element\n\n\t\t\t\tprops.locale   = locale\n\t\t\t\tprops.messages = messages\n\n\t\t\t\t// Create React page element\n\t\t\t\treturn React.createElement(wrapper, props, element)\n\t\t\t}\n\t\t})\n\t}\n\n\t// Render page (on the client side).\n\t//\n\t// Client side code can then rerender the page any time\n\t// through obtaining the `rerender()` function from the result object.\n\t//\n\treturn render_page().then((result) =>\n\t{\n\t\tresult.rerender = render_page\n\t\tresult.protectedCookie = protected_cookie_value\n\t\treturn result\n\t})\n}\n\n// Reads protected cookie value from a global variable\n// and then erases that global variable\nexport function get_protected_cookie_value()\n{\n\treturn window._protected_cookie_value\n}\n\n// Create `react-router` `history`\nexport function create_history(location, settings, parameters)\n{\n\t// Adds `useBasename` and `useQueries`\n\treturn _create_history(useRouterHistory(useBeforeUnload(createHistory)), location, settings, parameters)\n}\n\n// When a `popstate` event occurs (e.g. via \"Back\" browser button)\n// it `@preload()`s the page first and only then renders the page.\nexport function should_instrument_history_pop_state_listeners(call_listener)\n{\n\t// A list of tracked instrumented `popstate` listeners\n\tconst pop_state_listeners = []\n\n\t// The initial page URL won't have any `event.state` on `popstate`\n\t// therefore keep it in case the user decides to go \"Back\" to the very start.\n\tconst initial_location = window.location\n\n\tconst addEventListener = window.addEventListener\n\twindow.addEventListener = function(type, listener, flag)\n\t{\n\t\t// Modify `popstate` listener so that it's called\n\t\t// after the `popstate`d page finishes `@preload()`ing.\n\t\tif (type === 'popstate')\n\t\t{\n\t\t\tconst original_listener = listener\n\n\t\t\tlistener = (event) =>\n\t\t\t{\n\t\t\t\tcall_listener(original_listener, event, get_history_pop_state_location(event, initial_location))\n\t\t\t}\n\n\t\t\tpop_state_listeners.push\n\t\t\t({\n\t\t\t\toriginal    : original_listener,\n\t\t\t\tistrumented : listener\n\t\t\t})\n\t\t}\n\n\t\t// Proceed normally\n\t\treturn addEventListener(type, listener, flag)\n\t}\n\n\tconst removeEventListener = window.removeEventListener\n\twindow.removeEventListener = function(type, listener)\n\t{\n\t\t// Untrack the instrumented `popstate` listener being removed\n\t\t// and \"uninstrument\" the listener (restore the original listener).\n\t\tif (type === 'popstate')\n\t\t{\n\t\t\tfor (const pop_state_listener of pop_state_listeners)\n\t\t\t{\n\t\t\t\tif (pop_state_listener.original === listener)\n\t\t\t\t{\n\t\t\t\t\t// Restore the original listener\n\t\t\t\t\tlistener = pop_state_listener.istrumented\n\n\t\t\t\t\t// Remove the instrumented `popstate` listener from the list\n\t\t\t\t\tpop_state_listeners.splice(pop_state_listeners.indexOf(pop_state_listener), 1)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Proceed normally\n\t\treturn removeEventListener.apply(this, arguments)\n\t}\n}\n\n// Get the `location` of the page being `popstate`d\nfunction get_history_pop_state_location(event, initial_location)\n{\n\t// `event.state` is empty when the user\n\t// decides to go \"Back\" up to the initial page.\n\tif (event.state)\n\t{\n\t\treturn get_history_state_location(event.state)\n\t}\n\t\n\treturn initial_location\n}\n\n// Gets `location` from a `popstate`d history entry `state`.\n// https://github.com/mjackson/history/blob/v3.x/modules/BrowserProtocol.js\nfunction get_history_state_location(history_state)\n{\n\tconst key = history_state && history_state.key\n\n\treturn createLocation\n\t({\n\t\tpathname : window.location.pathname,\n\t\tsearch   : window.location.search,\n\t\thash     : window.location.hash,\n\t\tstate    : key ? readState(key) : undefined\n\t},\n\tundefined,\n\tkey)\n}\n"]}