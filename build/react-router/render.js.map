{"version":3,"sources":["../../source/react-router/render.js"],"names":["render_on_client","render_on_server","history","routes","create_page_element","to","router_element","then","element","disable_server_side_rendering","render_webpage_as_react_element","resolve","content","match_routes_against_location","redirect","router_state","page_element"],"mappings":";;;;;;;;;;QAoBgBA,gB,GAAAA,gB;QAmBAC,gB,GAAAA,gB;;AApChB;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;;AAmBO,SAASD,gBAAT,OACP;AAAA,KADmCE,OACnC,QADmCA,OACnC;AAAA,KAD4CC,MAC5C,QAD4CA,MAC5C;AAAA,KADoDC,mBACpD,QADoDA,mBACpD;AAAA,KADyEC,EACzE,QADyEA,EACzE;;AACCF,UAAS,OAAOA,MAAP,KAAkB,UAAlB,GAA+BA,QAA/B,GAA0CA,MAAnD;;AAEA,KAAMG,iBAAiB,qDAAQ,SAAUJ,OAAlB,EAA4B,QAASC,MAArC,GAAvB;;AAEA,QAAOC,oBAAoBE,cAApB,EAAoCC,IAApC,CAAyC,UAACC,OAAD,EAChD;AACC;AACA,SAAO,8BACN;AACAA,mBADA,EACS;AACTH,SAFA,CAEG;AAFH,GADM,CAAP;AAKA,EARM,CAAP;AASA;;AAED;AACA;AACO,SAASJ,gBAAT,QACP;AAAA,KADmCQ,6BACnC,SADmCA,6BACnC;AAAA,KADkEL,mBAClE,SADkEA,mBAClE;AAAA,KADuFM,+BACvF,SADuFA,+BACvF;AAAA,KADwHP,MACxH,SADwHA,MACxH;AAAA,KADgID,OAChI,SADgIA,OAChI;;AACC;AACA,KAAIO,6BAAJ,EACA;AACC;AACA,SAAO,kBAAQE,OAAR,CACN;AACAC,YAAS,8BAAuB,EAAEF,gEAAF,EAAvB;AADT,GADM,CAAP;AAIA;;AAED;AACA,QAAOG,8BACN;AACAV,UAAQ,OAAOA,MAAP,KAAkB,UAAlB,GAA+BA,QAA/B,GAA0CA,MADlD;AAEA;AACAD;AAHA,EADM,EAMNK,IANM,CAMD,iBACN;AAAA,MADSO,QACT,SADSA,QACT;AAAA,MADmBC,YACnB,SADmBA,YACnB;;AACC;AACA,MAAID,QAAJ,EACA;AACC,UAAO,EAAEA,kBAAF,EAAP;AACA;;AAED;AACA,MAAME,eAAeZ,oBAAoB,mDAAaW,YAAb,CAApB,CAArB;;AAEA;AACA,MAAMH,UAAU,8BAAuB,EAAEF,gEAAF,EAAmCM,0BAAnC,EAAvB,CAAhB;;AAEA;AACA,SAAO,EAAEJ,gBAAF,EAAP;AACA,EAtBM,CAAP;AAuBA","file":"render.js","sourcesContent":["// THIS MODULE IS CURRENTLY NOT USED.\n// IT'S JUST HERE AS AN EXAMPLE.\n\nimport React          from 'react'\nimport ReactDOM       from 'react-dom'\nimport ReactDOMServer from 'react-dom/server'\nimport { Router, RouterContext } from 'react-router'\n\nimport react_render_on_client from '../render on client'\nimport react_render_on_server from '../render on server'\n\n// Renders `element` React element inside the `to` DOM element.\n//\n// returns a Promise resolving to the rendered React component.\n//\n// The following code hasn't been tested.\n// Should theoretically work.\n// This is not currently being used.\n// It's just an example of Redux-less usage.\n//\nexport function render_on_client({ history, routes, create_page_element, to })\n{\n\troutes = typeof routes === 'function' ? routes() : routes\n\n\tconst router_element = <Router history={ history } routes={ routes }/>\n\n\treturn create_page_element(router_element).then((element) =>\n\t{\n\t\t// render the wrapped React page element to DOM\n\t\treturn react_render_on_client\n\t\t({\n\t\t\telement, // wrapped React page element\n\t\t\tto // DOM element containing React markup\n\t\t})\n\t})\n}\n\n// returns a Promise resolving to { status, content, redirect }\n//\nexport function render_on_server({ disable_server_side_rendering, create_page_element, render_webpage_as_react_element, routes, history })\n{\n\t// Maybe no one really needs to `disable_server_side_rendering`\n\tif (disable_server_side_rendering)\n\t{\n\t\t// Render the empty <Html/> component into Html markup string\n\t\treturn Promise.resolve\n\t\t({\n\t\t\tcontent: react_render_on_server({ render_webpage_as_react_element })\n\t\t})\n\t}\n\n\t// perform React-router routing\n\treturn match_routes_against_location\n\t({\n\t\troutes: typeof routes === 'function' ? routes() : routes,\n\t\t// `react-router` takes the current `location` from `history`\n\t\thistory\n\t})\n\t.then(({ redirect, router_state }) =>\n\t{\n\t\t// In case of a `react-router` `<Redirect/>`\n\t\tif (redirect)\n\t\t{\n\t\t\treturn { redirect }\n\t\t}\n\n\t\t// Renders the current page React component to a React element\n\t\tconst page_element = create_page_element(<Router { ...router_state }/>)\n\n\t\t// Render the current page's React element to HTML markup\n\t\tconst content = react_render_on_server({ render_webpage_as_react_element, page_element })\n\n\t\t// return HTTP status code and HTML markup\n\t\treturn { content }\n\t})\n}"]}