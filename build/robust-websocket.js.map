{"version":3,"sources":["../source/robust-websocket.js"],"names":["RobustWebSocket","url","protocols","userOptions","realWs","close","connectTimeout","self","attempts","reconnects","reconnectWhenOnlineAgain","explicitlyClosed","pendingReconnect","opts","defaultOptions","shouldReconnect","timeout","Error","forEach","readOnlyProp","get","clearPendingReconnectIfNeeded","clearTimeout","ononline","event","reconnect","onoffline","connectivityEventsAttached","detachConnectivityEvents","window","removeEventListener","attachConnectivityEvents","addEventListener","send","apply","arguments","code","reason","open","readyState","WebSocket","OPEN","CONNECTING","newWebSocket","navigator","onLine","delay","setTimeout","Object","defineProperty","value","enumerable","binaryType","dispatchEvent","CustomEvent","stdEvent","cb","automaticOpen","ws","prototype","type","callback","listeners","push","stack","i","l","length","splice","call"],"mappings":"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","file":"robust-websocket.js","sourcesContent":["// https://github.com/appuri/robust-websocket/blob/master/robust-websocket.js\n// A copy from January 25th 2017.\n// \n// Rewriting with a proper ES6 export\n// https://github.com/appuri/robust-websocket/issues/9\n\nexport default function RobustWebSocket(url, protocols, userOptions) {\n  var realWs = { close: function() {} },\n      connectTimeout,\n      self = this,\n      attempts = 0,\n      reconnects = -1,\n      reconnectWhenOnlineAgain = false,\n      explicitlyClosed = false,\n      pendingReconnect,\n      opts = Object.assign({},\n        RobustWebSocket.defaultOptions,\n        typeof userOptions === 'function' ? { shouldReconnect: userOptions } : userOptions\n      )\n\n  if (typeof opts.timeout !== 'number') {\n    throw new Error('timeout must be the number of milliseconds to timeout a connection attempt')\n  }\n\n  if (typeof opts.shouldReconnect !== 'function') {\n    throw new Error('shouldReconnect must be a function that returns the number of milliseconds to wait for a reconnect attempt, or null or undefined to not reconnect.')\n  }\n\n  ['bufferedAmount', 'url', 'readyState', 'protocol', 'extensions'].forEach(function(readOnlyProp) {\n    Object.defineProperty(self, readOnlyProp, {\n      get: function() { return realWs[readOnlyProp] }\n    })\n  })\n\n  function clearPendingReconnectIfNeeded() {\n    if (pendingReconnect) {\n      pendingReconnect = null\n      clearTimeout(pendingReconnect)\n    }\n  }\n\n  var ononline = function(event) {\n    if (reconnectWhenOnlineAgain) {\n      clearPendingReconnectIfNeeded()\n      reconnect(event)\n    }\n  },\n  onoffline = function() {\n    reconnectWhenOnlineAgain = true\n    realWs.close(1000)\n  },\n  connectivityEventsAttached = false\n\n  function detachConnectivityEvents() {\n    if (connectivityEventsAttached) {\n      window.removeEventListener('online', ononline)\n      window.removeEventListener('offline', onoffline)\n      connectivityEventsAttached = false\n    }\n  }\n\n  function attachConnectivityEvents() {\n    if (!connectivityEventsAttached) {\n      window.addEventListener('online', ononline)\n      window.addEventListener('offline', onoffline)\n      connectivityEventsAttached = true\n    }\n  }\n\n  self.send = function() {\n    return realWs.send.apply(realWs, arguments)\n  }\n\n  self.close = function(code, reason) {\n    if (typeof code !== 'number') {\n      reason = code\n      code = 1000\n    }\n\n    clearPendingReconnectIfNeeded()\n    reconnectWhenOnlineAgain = false\n    explicitlyClosed = true\n    detachConnectivityEvents()\n\n    return realWs.close(code, reason)\n  }\n\n  self.open = function() {\n    if (realWs.readyState !== WebSocket.OPEN && realWs.readyState !== WebSocket.CONNECTING) {\n      clearPendingReconnectIfNeeded()\n      reconnectWhenOnlineAgain = false\n      explicitlyClosed = false\n\n      newWebSocket()\n    }\n  }\n\n  function reconnect(event) {\n    if (event.code === 1000 || explicitlyClosed) {\n      attempts = 0\n      return\n    }\n    if (navigator.onLine === false) {\n      reconnectWhenOnlineAgain = true\n      return\n    }\n\n    var delay = opts.shouldReconnect(event, self)\n    if (typeof delay === 'number') {\n      pendingReconnect = setTimeout(newWebSocket, delay)\n    }\n  }\n\n  Object.defineProperty(self, 'listeners', {\n    value: {\n      open: [function(event) {\n        if (connectTimeout) {\n          clearTimeout(connectTimeout)\n          connectTimeout = null\n        }\n        event.reconnects = ++reconnects\n        event.attempts = attempts\n        attempts = 0\n        reconnectWhenOnlineAgain = false\n      }],\n      close: [reconnect]\n    }\n  })\n\n  Object.defineProperty(self, 'attempts', {\n    get: function() { return attempts },\n    enumerable: true\n  })\n\n  Object.defineProperty(self, 'reconnects', {\n    get: function() { return reconnects },\n    enumerable: true\n  })\n\n  function newWebSocket() {\n    pendingReconnect = null\n    realWs = new WebSocket(url, protocols)\n    realWs.binaryType = self.binaryType\n\n    attempts++\n    self.dispatchEvent(Object.assign(new CustomEvent('connecting'), {\n      attempts: attempts,\n      reconnects: reconnects\n    }))\n\n    connectTimeout = setTimeout(function() {\n      connectTimeout = null\n      detachConnectivityEvents()\n      self.dispatchEvent(Object.assign(new CustomEvent('timeout'), {\n        attempts: attempts,\n        reconnects: reconnects\n      }))\n    }, opts.timeout)\n\n    ;['open', 'close', 'message', 'error'].forEach(function(stdEvent) {\n      realWs.addEventListener(stdEvent, function(event) {\n        self.dispatchEvent(event)\n\n        var cb = self['on' + stdEvent]\n        if (typeof cb === 'function') {\n          return cb.apply(self, arguments)\n        }\n      })\n    })\n\n    attachConnectivityEvents()\n  }\n\n  if (opts.automaticOpen) {\n    newWebSocket()\n  }\n}\n\nRobustWebSocket.defaultOptions = {\n  // the time to wait before a successful connection\n  // before the attempt is considered to have timed out\n  timeout: 4000,\n  // Given a CloseEvent or OnlineEvent and the RobustWebSocket state,\n  // should a reconnect be attempted? Return the number of milliseconds to wait\n  // to reconnect (or null or undefined to not), rather than true or false\n  shouldReconnect: function(event, ws) {\n    if (event.code === 1008 || event.code === 1011) return\n    return [0, 3000, 10000][ws.attempts]\n  },\n\n  // Create and connect the WebSocket when the instance is instantiated.\n  // Defaults to true to match standard WebSocket behavior\n  automaticOpen: true\n}\n\nRobustWebSocket.prototype.binaryType = 'blob'\n\n// Taken from MDN https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\nRobustWebSocket.prototype.addEventListener = function(type, callback) {\n  if (!(type in this.listeners)) {\n    this.listeners[type] = []\n  }\n  this.listeners[type].push(callback)\n}\n\nRobustWebSocket.prototype.removeEventListener = function(type, callback) {\n  if (!(type in this.listeners)) {\n    return\n  }\n  var stack = this.listeners[type]\n  for (var i = 0, l = stack.length; i < l; i++) {\n    if (stack[i] === callback) {\n      stack.splice(i, 1)\n      return\n    }\n  }\n}\n\nRobustWebSocket.prototype.dispatchEvent = function(event) {\n  if (!(event.type in this.listeners)) {\n    return\n  }\n  // https://github.com/appuri/robust-websocket/issues/10\n  // event.currentTarget = this\n  var stack = this.listeners[event.type]\n  for (var i = 0, l = stack.length; i < l; i++) {\n    stack[i].call(this, event)\n  }\n}"]}