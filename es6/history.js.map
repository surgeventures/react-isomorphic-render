{"version":3,"sources":["../source/history.js"],"names":["location_url","create_history","createHistory","location","history_settings","parameters","server","history_options","options","history","entries","replace","server_side_redirect","basename","push","wrap","Error","server_redirect","get_location","getCurrentLocation","unlisten","listen","x","undefined","error","pathname","_redirect"],"mappings":";AAAA,SAASA,YAAT,QAA6B,YAA7B;;AAEA;AACA,eAAe,SAASC,cAAT,CAAwBC,aAAxB,EAAuCC,QAAvC,EAAiDC,gBAAjD,EAAmEC,UAAnE,EAA+EC,MAA/E,EACf;AACC,KAAMC,kBAAkBH,iBAAiBI,OAAzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAIC,UAAUP,2BAAmBK,eAAnB,IAAoCG,SAAS,CAAEP,QAAF,CAA7C,IAAd;;AAEA;AACA;AACA,KAAIG,MAAJ,EACA;AACC;AACA;AACAG,UAAQE,OAAR,GAAkBC,qBAAqBL,mBAAmBA,gBAAgBM,QAAxD,CAAlB;AACAJ,UAAQK,IAAR,GAAkBL,QAAQE,OAA1B;AACA;;AAED;AACA,KAAIP,iBAAiBW,IAArB,EACA;AACC;AACAN,YAAUL,iBAAiBW,IAAjB,CAAsBN,OAAtB,EAA+BJ,UAA/B,CAAV;AACA;;AAED;AACA,QAAOI,OAAP;AACA;;AAED;AACA;AACA;AACA,SAASG,oBAAT,GACA;AACC,QAAO,UAACT,QAAD,EACP;AACC;AACA,MAAI,CAACA,QAAL,EACA;AACC,SAAM,IAAIa,KAAJ,2DAAN;AACA;;AAED;AACAC,kBAAgBd,QAAhB;AACA,EAVD;AAWA;;AAED,OAAO,SAASe,YAAT,CAAsBT,OAAtB,EACP;AACC;AACA,KAAIA,QAAQN,QAAZ,EACA;AACC,SAAOM,QAAQN,QAAf;AACA;;AAED;AACA,KAAIM,QAAQU,kBAAZ,EACA;AACC,SAAOV,QAAQU,kBAAR,EAAP;AACA;;AAED;AACA,KAAIhB,iBAAJ;AACA,KAAMiB,WAAWX,QAAQY,MAAR,CAAe;AAAA,SAAKlB,WAAWmB,CAAhB;AAAA,EAAf,CAAjB;AACAF;AACA,QAAOjB,QAAP;AACA;;AAED;AACA;AACA;AACA,OAAO,SAASc,eAAT,CAAyBd,QAAzB,EACP;AACC;AACA;AACA;AACA,KAAIA,SAASU,QAAb,EACA;AACCV,0BAEIA,QAFJ;AAGCU,aAAUU;AAHX;AAKA;;AAED,KAAMC,QAAQ,IAAIR,KAAJ,qBAA4Bb,SAASsB,QAArC,6BAAd;AACAD,OAAME,SAAN,GAAkBvB,QAAlB;AACA,OAAMqB,KAAN;AACA","file":"history.js","sourcesContent":["import { location_url } from './location'\n\n// Creates `history`\nexport default function create_history(createHistory, location, history_settings, parameters, server)\n{\n\tconst history_options = history_settings.options\n\n\t// Create `history`.\n\t//\n\t// https://github.com/ReactTraining/react-router/blob/master/docs/guides/Histories.md#customize-your-history-further\n\t//\n\t// `entries` is used in `MemoryHistory` only (i.e. on server side)\n\t// https://github.com/ReactTraining/history/blob/v3.x/modules/createMemoryHistory.js\n\t//\n\tlet history = createHistory({ ...history_options, entries: [ location ] })\n\n\t// Because History API won't work on the server side for navigation,\n\t// instrument it with custom redirection handlers.\n\tif (server)\n\t{\n\t\t// Instrument `history`\n\t\t// (which was earlier passed to `preloading_middleware`)\n\t\thistory.replace = server_side_redirect(history_options && history_options.basename)\n\t\thistory.push    = history.replace\n\t}\n\n\t// For custom `history` wrappers, like `syncHistoryWithStore` from `react-router-redux`.\n\tif (history_settings.wrap)\n\t{\n\t\t// `parameters` is `{ store }` for Redux use case\n\t\thistory = history_settings.wrap(history, parameters)\n\t}\n\n\t// Return `history`\n\treturn history\n}\n\n// A hacky way but it should work\n// for calling `redirect` from anywhere\n// inside `@preload()` function argument.\nfunction server_side_redirect()\n{\n\treturn (location) =>\n\t{\n\t\t// Sanity check\n\t\tif (!location)\n\t\t{\n\t\t\tthrow new Error(`location parameter is required for redirect() or goto()`)\n\t\t}\n\n\t\t// Construct a special \"Error\" used for aborting and redirecting\n\t\tserver_redirect(location)\n\t}\n}\n\nexport function get_location(history)\n{\n\t// v4\n\tif (history.location)\n\t{\n\t\treturn history.location\n\t}\n\n\t// v3\n\tif (history.getCurrentLocation)\n\t{\n\t\treturn history.getCurrentLocation()\n\t}\n\n\t// v2\n\tlet location\n\tconst unlisten = history.listen(x => location = x)\n\tunlisten()\n\treturn location\n}\n\n// `location` does not include `basename`.\n// `basename` will be prepended when this error is caught\n// as part of server-side rendering.\nexport function server_redirect(location)\n{\n\t// Just in case\n\t// (though I don't know if it is even possible,\n\t//  I didn't check <Redirect/> pseudo route case)\n\tif (location.basename)\n\t{\n\t\tlocation = \n\t\t{\n\t\t\t...location,\n\t\t\tbasename: undefined\n\t\t}\n\t}\n\n\tconst error = new Error(`Redirecting to ${location.pathname} (this is not an error)`)\n\terror._redirect = location\n\tthrow error\n}"]}